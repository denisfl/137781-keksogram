// Если первый аргумент, a, имеет тип boolean, то:
//     Если он true, вернуть строку, в которую подставлен параметр b:
//         "Переданное GIF-изображение анимировано и содержит [b] кадров"
//     Если он false, то вернуть строку:
//         "Переданное GIF-изображение не анимировано"
//
// Если первый аргумент имеет числовой тип, то вернуть строку:
//     "Переданное SVG-изображение содержит [a] объектов и [b * 4] аттрибутов"
//
// Если первый аргумент массив, то вернуть строку:
//     "Количество красных точек во всех строчках изображения: [sum]"
//     где [sum] — это сумма значений переданного массива
//
// Если оба аргумента массивы, то вернуть строку:
//     "Общая площадь артефактов сжатия: [square] пикселей"
//     где [square] — это сумма произведений соответствующих элементов массивов a и b,
//     cумма произведения первого элемента a с первым элементом b, второго со вторым и так далее

function getSum(arrayX) {
  var result = 0;

  for (var i = 0; i < arrayX.length; i++) {
    result += arrayX[i];
  }
  return result;
}

function getSquare(arrayX, arrayY) {
  var result = 0;

  for (var i = 0; i < arrayX.length; i++) {
    result += arrayX[i] * arrayY[i];
  }
  return result;
}

function getMessage(a, b) {
  if (typeof a === "boolean") {
    if (Boolean(a)) {
      return "Переданное GIF-изображение анимировано и содержит " + b +
        " кадров";
    } else {
      return "Переданное GIF-изображение не анимировано";
    }
  } else if (typeof a === "number") {
    return "Переданное SVG-изображение содержит " + a + " объектов и " + b * 4 +
      " аттрибутов";
  } else if (Array.isArray(a)) {

    if (Array.isArray(b)) {
      var square = getSquare(a, b);
      return "Общая площадь артефактов сжатия: " + square + " пикселей";
    } else {
      var sum = getSum(a);
      return "Количество красных точек во всех строчках изображения: " + sum;
    }
  }
}

getMessage();
